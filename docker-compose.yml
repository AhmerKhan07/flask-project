version: '3.8'
services:
  appseed-app:
    container_name: appseed_app
    restart: always
    env_file: .env
    build: .
    networks:
      - db_network
      - web_network

  nginx:
    container_name: nginx
    restart: always
    image: "nginx:latest"
    ports:
      - "5085:5085"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    networks:
      - web_network
    depends_on:
      - appseed-app

  jenkins:
    container_name: jenkins
    ports:
      - "9090:8080"  
      - "60000:50000" 
    volumes:
      - ./jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    # environment:
    #   - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    networks:
      - web_network
    build:
      context: .
      dockerfile: Dockerfile-jenkins

  sonarqube:
    container_name: sonarqube
    image: sonarqube:lts
    ports:
      - "9000:9000"
    volumes:
      - ./sonarqube_data:/opt/sonarqube/data
      - ./sonarqube_logs:/opt/sonarqube/logs
      - ./sonarqube_extensions:/opt/sonarqube/extensions
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    networks:
      - web_network
    depends_on:
      - postgres

  postgres:
    container_name: postgres_sonar
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - postgresql:/var/lib/postgresql
    networks:
      - web_network

networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge

volumes:
  postgresql:
